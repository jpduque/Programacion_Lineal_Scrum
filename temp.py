import matplotlib.pyplot as plt
import numpy as np
from cvxopt.modeling import variable, op

x = variable()
y = variable()
c1 = (x >= 100)
c2 = (y >= 80)
c3 = (x <= 200)
c4 = (y <= 170)
c5 = (x+y <= 200)
c6 = (x >= 0)
c7 = (y >= 0)
lp1 = op(6*x-5*y, [c1, c2, c3, c4, c5, c6, c7])
lp1.solve('glpk')
print('\nEstado: {}'.format(lp1.status))
print('Valor óptimo: {}'.format(-round(lp1.objective.value()[0])))
print('Óptimo x: {}'.format(round(x.value[0])))
print('Óptimo y: {}'.format(round(y.value[0])))
print('Mult óptimo primera restricción: {}'.format(c1.multiplier.value[0]))
print('Mult óptimo segunda restricción: {}'.format(c2.multiplier.value[0]))
print('Mult óptimo tercera restricción: {}'.format(c3.multiplier.value[0]))
print('Mult óptimo cuarta restricción: {}\n'.format(c4.multiplier.value[0]))
print('Mult óptimo cuarta restricción: {}\n'.format(c5.multiplier.value[0]))
print('Mult óptimo cuarta restricción: {}\n'.format(c6.multiplier.value[0]))
print('Mult óptimo cuarta restricción: {}\n'.format(c7.multiplier.value[0]))
# t = np.linspace(-200, 200, 10)
# p1, p2, p3 = [(100, 100), (100, 80),(120,80)]
# pol = plt.Polygon([p1, p2, p3,], closed=True, alpha=0.5, color='blue')
# ax = plt.gca()
# ax.cla()
# ax.set_xlim((0, 200))
# ax.set_ylim((0, 200))
# ax.set_aspect('equal')
# fig = plt.gcf()
# fig.gca().add_artist(pol)
#ax.plot(t, (1/100)*t, color='red', lw=2.0)
#ax.plot([0,200], [80,80], color='yellow', lw=2.0)
#ax.plot([0,200], [170,170], color='blue', lw=2.0)
#ax.plot([100,100], [0,200], color='green', lw=2.0)
#ax.plot([200,200], [0,200], color='black', lw=2.0)
#
#ax.plot(t, 200-t, color='red', lw=2.0)
# ax.plot(round(x.value[0]), round(y.value[0]), 'ko', lw=2.0)
# ax.plot(round(c5), 'ko', lw=2.0)
x = np.linspace(0, 20, 2000)
y1 = (x*0)+ 100
# ax.grid('on')
plt.plot(x, y1, label=r'$y\geq2$')
plt.show()